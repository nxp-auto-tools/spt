diff -ur adl_3_17_3_patch4-ini/asm/GenAsm.C adl_3_17_3_patch4/asm/GenAsm.C
--- adl_3_17_3_patch4-ini/asm/GenAsm.C	2020-08-12 10:21:49.823360918 +0300
+++ adl_3_17_3_patch4/asm/GenAsm.C	2020-08-12 10:26:20.983249444 +0300
@@ -2241,6 +2241,9 @@
     // Generate a disassembler.
     void exec(ostream &o,ostream *h,const gc_string &header_name)
     {
+	bool is_SPT=false;
+        if((_core.name()).find("spt")!=std::string::npos)is_SPT=true; 
+		o<<"//" <<_core.name()<<"\n";
       o << "/*\n"
         << "\n"
         << "  Disassembler code generated by ADL.\n"
@@ -2356,7 +2359,7 @@
         o << "char *application_data = (char *) info->application_data;\n";
       }
       o << "int status;\n\n"
-        << "int size = " << bytes << ";\n"
+        << "int size = " << bytes << ";\n"<<(is_SPT?"memaddr = (memaddr & 0xfffff0);\n" : "")
 
         // This code is here so that we don't read past the supplied buffer.
         // For example, with variable-sized instructions, we might attempt to
diff -ur adl_3_17_3_patch4-ini/external/binutils-adl/binutils/objdump.c adl_3_17_3_patch4/external/binutils-adl/binutils/objdump.c
--- adl_3_17_3_patch4-ini/external/binutils-adl/binutils/objdump.c	2020-08-12 10:21:50.235360747 +0300
+++ adl_3_17_3_patch4/external/binutils-adl/binutils/objdump.c	2020-08-12 10:26:20.983249444 +0300
@@ -146,7 +146,7 @@
 };
 
 /* Architecture to disassemble for, or default if NULL.  */
-static char *machine = NULL;
+static char *machine = "ppc";
 
 /* Target specific options to the disassembler.  */
 static char *disassembler_options = NULL;
@@ -975,6 +975,7 @@
 			     bfd_vma vma, struct disassemble_info *inf,
 			     bfd_boolean skip_zeroes)
 {
+  (*inf->fprintf_func) (inf->stream, "0x");
   objdump_print_value (vma, inf, skip_zeroes);
 
   if (sym == NULL)
diff -ur adl_3_17_3_patch4-ini/external/binutils-adl/gas/adl-asm-impl.C adl_3_17_3_patch4/external/binutils-adl/gas/adl-asm-impl.C
--- adl_3_17_3_patch4-ini/external/binutils-adl/gas/adl-asm-impl.C	2020-08-12 10:21:50.363360694 +0300
+++ adl_3_17_3_patch4/external/binutils-adl/gas/adl-asm-impl.C	2020-08-12 10:28:12.975204158 +0300
@@ -2220,7 +2220,7 @@
     // means we allow a full 64-bit value (since upper has wrapped over the
     // top).
     if ((value < operand->lower) || ((operand->upper != 0) &&
-                                     ((unsigned long)abs(value) > operand->upper)) ) {
+                                     ((uint64_t)abs(value) > operand->upper)) ) {
       return false;
     }
   } else {
diff -ur adl_3_17_3_patch4-ini/external/binutils-adl/gas/adl-asm-impl-gas.C adl_3_17_3_patch4/external/binutils-adl/gas/adl-asm-impl-gas.C
--- adl_3_17_3_patch4-ini/external/binutils-adl/gas/adl-asm-impl-gas.C	2020-08-12 10:21:50.363360694 +0300
+++ adl_3_17_3_patch4/external/binutils-adl/gas/adl-asm-impl-gas.C	2020-08-12 10:50:15.010430152 +0300
@@ -206,13 +206,30 @@
 arelent *tc_gen_reloc (asection *seg ATTRIBUTE_UNUSED,fixS *fixp)
 {
   arelent *reloc;
+  bool is32bit_elf = true;
+  bfd_reloc_code_real_type rtype = fixp->fx_r_type;
+
+  if (strstr(seg->owner->xvec->name, "64"))
+    is32bit_elf = false;
+
+  if (!is32bit_elf) {
+    // Used only for SPT3.0 target for now.
+
+    // 1 is BFD_RELOC_64, 257 is R_AARCH64_ABS64.
+    if (rtype == 1)
+      rtype = (bfd_reloc_code_real_type)257;
+
+    // 2 is BFD_RELOC_32, 258 is R_AARCH64_ABS32.
+    else if (rtype == 2)
+      rtype = (bfd_reloc_code_real_type)258;
+  }
 
   reloc = (arelent *) xmalloc (sizeof (arelent));
 
   reloc->sym_ptr_ptr = (asymbol **) xmalloc (sizeof (asymbol *));
   *reloc->sym_ptr_ptr = symbol_get_bfdsym (fixp->fx_addsy);
   reloc->address = fixp->fx_frag->fr_address + fixp->fx_where;
-  reloc->howto = adl_reloc_type_lookup (stdoutput, fixp->fx_r_type);
+  reloc->howto = adl_reloc_type_lookup (stdoutput, rtype);
   if (reloc->howto == (reloc_howto_type *) NULL)
     {
       AS_BAD_WHERE (fixp->fx_file, fixp->fx_line,
diff -ur adl_3_17_3_patch4-ini/external/binutils-adl/gas/as.c adl_3_17_3_patch4/external/binutils-adl/gas/as.c
--- adl_3_17_3_patch4-ini/external/binutils-adl/gas/as.c	2020-08-12 10:21:50.363360694 +0300
+++ adl_3_17_3_patch4/external/binutils-adl/gas/as.c	2020-08-12 10:50:15.010430152 +0300
@@ -582,7 +582,8 @@
 	      case 'v':
 #endif
 	      case OPTION_VERBOSE:
-		print_version_id ();
+                if (!md_parse_option('v', "verbose"))
+		  print_version_id ();
 		verbose = 1;
 	      break;
 	    }
diff -ur adl_3_17_3_patch4-ini/external/binutils-adl/opcodes/disassemble.c adl_3_17_3_patch4/external/binutils-adl/opcodes/disassemble.c
--- adl_3_17_3_patch4-ini/external/binutils-adl/opcodes/disassemble.c	2020-08-12 10:21:50.871360482 +0300
+++ adl_3_17_3_patch4/external/binutils-adl/opcodes/disassemble.c	2020-08-12 10:26:20.983249444 +0300
@@ -613,6 +613,7 @@
 #endif
 #ifdef ARCH_powerpc
     case bfd_arch_powerpc:
+      info->skip_zeroes = 16;
 #endif
 #ifdef ARCH_rs6000
     case bfd_arch_rs6000:
