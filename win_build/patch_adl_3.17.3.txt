diff -ur adl-3.17.3_ini/asm/GenAsm.C adl-3.17.3/asm/GenAsm.C
--- adl-3.17.3_ini/asm/GenAsm.C	2018-03-07 16:15:11.000000000 +0200
+++ adl-3.17.3/asm/GenAsm.C	2018-05-21 17:35:01.000000000 +0300
@@ -2241,6 +2241,9 @@
     // Generate a disassembler.
     void exec(ostream &o,ostream *h,const gc_string &header_name)
     {
+	bool is_SPT=false;
+        if((_core.name()).find("spt")!=std::string::npos)is_SPT=true; 
+		o<<"//" <<_core.name()<<"\n";
       o << "/*\n"
         << "\n"
         << "  Disassembler code generated by ADL.\n"
@@ -2356,7 +2359,7 @@
         o << "char *application_data = (char *) info->application_data;\n";
       }
       o << "int status;\n\n"
-        << "int size = " << bytes << ";\n"
+        << "int size = " << bytes << ";\n"<<(is_SPT?"memaddr = (memaddr & 0xfffff0);\n" : "")
 
         // This code is here so that we don't read past the supplied buffer.
         // For example, with variable-sized instructions, we might attempt to
diff -ur adl-3.17.3_ini/external/binutils-adl/binutils/objdump.c adl-3.17.3/external/binutils-adl/binutils/objdump.c
--- adl-3.17.3_ini/external/binutils-adl/binutils/objdump.c	2018-03-07 16:17:26.000000000 +0200
+++ adl-3.17.3/external/binutils-adl/binutils/objdump.c	2018-03-12 14:25:47.000000000 +0200
@@ -146,7 +146,7 @@
 };
 
 /* Architecture to disassemble for, or default if NULL.  */
-static char *machine = NULL;
+static char *machine = "ppc";
 
 /* Target specific options to the disassembler.  */
 static char *disassembler_options = NULL;
@@ -975,6 +975,7 @@
                             bfd_vma vma, struct disassemble_info *inf,
                             bfd_boolean skip_zeroes)
 {
+  (*inf->fprintf_func) (inf->stream, "0x");
   objdump_print_value (vma, inf, skip_zeroes);

   if (sym == NULL)

diff -ur adl-3.17.3_ini/external/binutils-adl/opcodes/disassemble.c adl-3.17.3/external/binutils-adl/opcodes/disassemble.c
--- adl-3.17.3_ini/external/binutils-adl/opcodes/disassemble.c	2018-03-07 16:17:25.000000000 +0200
+++ adl-3.17.3/external/binutils-adl/opcodes/disassemble.c	2018-05-30 15:14:43.000000000 +0300
@@ -613,6 +613,7 @@
 #endif
 #ifdef ARCH_powerpc
     case bfd_arch_powerpc:
+      info->skip_zeroes = 16;
 #endif
 #ifdef ARCH_rs6000
     case bfd_arch_rs6000:
